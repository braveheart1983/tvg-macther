name: TRGOL Domain Check and Update
on:
  schedule:
    - cron: '*/30 * * * *'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  check-and-update-domain:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Install requests
      run: pip install requests

    - name: Smart Domain Check and Conditional Update
      id: domain_check
      run: |
        # Mevcut domaini al
        if [ -f "domain.txt" ]; then
          OLD_DOMAIN=$(grep -o 'Adres: .*' domain.txt | cut -d' ' -f2)
          echo "Mevcut domain: $OLD_DOMAIN"
        else
          OLD_DOMAIN=""
        fi

        # Python ile en son çalışan domaini bul
        NEW_DOMAIN=$(python3 - <<'EOF'
import requests

def check_domain(domain):
    try:
        r = requests.get(domain, timeout=5)
        return r.status_code == 200
    except:
        return False

start = 1397  # başlangıç numarası
latest = None
for i in range(10):
    d = f"https://trgoals{start + i}.xyz/"
    if check_domain(d):
        latest = d
    else:
        break

# bir üst domaini kontrol et
if latest:
    next_d = f"https://trgoals{int(latest[12:-5])+1}.xyz/"
    if check_domain(next_d):
        latest = next_d

print(latest if latest else "https://trgoals1397.xyz/")
EOF
)
        echo "Yeni domain: $NEW_DOMAIN"

        # Sadece domain değiştiyse dosyayı güncelle
        if [ "$NEW_DOMAIN" != "$OLD_DOMAIN" ]; then
          echo -e "Güncel domain: $(date '+%Y-%m-%d %H:%M:%S')\nAdres: $NEW_DOMAIN" > domain.txt
          echo "CHANGED=true" >> $GITHUB_ENV
        else
          echo "CHANGED=false" >> $GITHUB_ENV
        fi

    - name: Commit and push changes if domain changed
      if: env.CHANGED == 'true'
      run: |
        git config user.name "github-actions"
        git config user.email "github-actions@github.com"
        git add domain.txt
        git commit -m "Güncel domain: $(date '+%Y-%m-%d %H:%M:%S')"
        git push
        echo "Değişiklikler push edildi"
