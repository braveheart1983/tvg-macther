name: TRGOL Domain Check and Update
on:
  schedule:
    - cron: '*/30 * * * *'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  check-and-update-domain:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Install requests
      run: pip install requests

    - name: Smart Domain Check and Update
      id: domain_check
      run: |
        # Mevcut domaini al veya varsayılanı kullan
        if [ -f "domain.txt" ]; then
          CURRENT_DOMAIN=$(grep -o 'Adres: .*' domain.txt | cut -d' ' -f2)
          echo "Mevcut domain: $CURRENT_DOMAIN"
        else
          CURRENT_DOMAIN="https://trgoals1397.xyz/"
          echo "Yeni domain.txt oluşturuluyor: $CURRENT_DOMAIN"
        fi

        # Domain numarasını al
        DOMAIN_NUMBER=$(echo $CURRENT_DOMAIN | grep -o '[0-9]\+')
        echo "Başlangıç domain numarası: $DOMAIN_NUMBER"

        # Akıllı domain kontrolü için Python scripti
        python3 -c "
import requests
from datetime import datetime

def check_domain(domain):
    try:
        response = requests.get(domain, timeout=5, allow_redirects=True)
        return response.status_code == 200
    except:
        return False

start_domain_number = $DOMAIN_NUMBER
latest_working_domain = None
latest_domain_number = start_domain_number

# Maksimum 10 domain ilerisine bak
for i in range(10):
    current_check_domain = f'https://trgoals{start_domain_number + i}.xyz/'
    is_active = check_domain(current_check_domain)
    print(f'Domain {start_domain_number + i} kontrol: {current_check_domain} - Aktif: {is_active}')
    if is_active:
        latest_working_domain = current_check_domain
        latest_domain_number = start_domain_number + i
    else:
        break

# En son çalışan domainin bir üstünü kontrol et
if latest_working_domain:
    next_domain = f'https://trgoals{latest_domain_number + 1}.xyz/'
    if check_domain(next_domain):
        selected_domain = next_domain
    else:
        selected_domain = latest_working_domain
else:
    selected_domain = 'https://trgoals1397.xyz/'

# domain.txt'yi güncelle (her zaman)
with open('domain.txt', 'w') as f:
    f.write(f'Güncel domain: {datetime.now().strftime(\"%Y-%m-%d %H:%M:%S\")}\n')
    f.write(f'Adres: {selected_domain}\n')

print(f'Seçilen domain: {selected_domain}')
        "

    - name: Commit and push changes
      run: |
        git config user.name "github-actions"
        git config user.email "github-actions@github.com"
        git add domain.txt

        # Her zaman commit at (zaten timestamp değişiyor)
        git commit -m "Güncel domain: $(date '+%Y-%m-%d %H:%M:%S')" || echo "Commit yok, zaten güncel"
        git push
        echo "Değişiklikler push edildi"
